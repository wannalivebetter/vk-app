"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classNames = _interopRequireDefault(require("../../lib/classNames"));

var _getClassName = _interopRequireDefault(require("../../helpers/getClassName"));

var _platform = require("../../lib/platform");

var _Tappable = _interopRequireDefault(require("../Tappable/Tappable"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var baseClassNames = (0, _getClassName.default)('PanelHeaderContent');

var PanelHeaderContent = function PanelHeaderContent(_ref) {
  var className = _ref.className,
      style = _ref.style,
      aside = _ref.aside,
      status = _ref.status,
      before = _ref.before,
      children = _ref.children,
      onClick = _ref.onClick,
      restProps = _objectWithoutProperties(_ref, ["className", "style", "aside", "status", "before", "children", "onClick"]);

  var InComponent = onClick ? _Tappable.default : 'div';
  var rootProps = onClick ? {} : restProps;
  var inProps = onClick ? _objectSpread({}, restProps, {
    activeEffectDelay: 200
  }) : {};
  return _react.default.createElement("div", _extends({}, rootProps, {
    className: (0, _classNames.default)(baseClassNames, className),
    style: style
  }), _platform.IS_PLATFORM_ANDROID && before && _react.default.createElement("div", {
    className: "PanelHeaderContent__before"
  }, before), _react.default.createElement(InComponent, _extends({}, inProps, {
    className: "PanelHeaderContent__in",
    onClick: onClick
  }), status && _react.default.createElement("div", {
    className: "PanelHeaderContent__status"
  }, status), _react.default.createElement("div", {
    className: "PanelHeaderContent__children"
  }, _react.default.createElement("span", {
    className: "PanelHeaderContent__children-in"
  }, children), aside && _react.default.createElement("div", {
    className: "PanelHeaderContent__aside"
  }, aside))));
};

PanelHeaderContent.propTypes = {
  children: _propTypes.default.node,
  className: _propTypes.default.string,
  style: _propTypes.default.object,
  aside: _propTypes.default.node,
  status: _propTypes.default.node,
  onClick: _propTypes.default.func,

  /**
   * Android only
   */
  before: _propTypes.default.node
};
var _default = PanelHeaderContent;
exports.default = _default;
//# sourceMappingURL=PanelHeaderContent.js.map