"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classNames = _interopRequireDefault(require("../../lib/classNames"));

var _getClassName = _interopRequireDefault(require("../../helpers/getClassName"));

var _Avatar = _interopRequireDefault(require("../Avatar/Avatar"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var baseClassNames = (0, _getClassName.default)('Entity'); // @TODO Try to load photo

/**
 * @deprecated Используйте `Cell`. Этот компонент устарел и будет удален в 3.0.0
 */

var Entity =
/*#__PURE__*/
function (_Component) {
  _inherits(Entity, _Component);

  function Entity() {
    _classCallCheck(this, Entity);

    return _possibleConstructorReturn(this, _getPrototypeOf(Entity).apply(this, arguments));
  }

  _createClass(Entity, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          className = _this$props.className,
          style = _this$props.style,
          photo = _this$props.photo,
          title = _this$props.title,
          description = _this$props.description,
          avatarProps = _this$props.avatarProps,
          children = _this$props.children;
      return _react.default.createElement("div", {
        className: (0, _classNames.default)(baseClassNames, className),
        style: style
      }, _react.default.createElement("div", {
        className: "Entity__aside"
      }, _react.default.createElement(_Avatar.default, _extends({
        src: photo,
        alt: title,
        size: this.avatarSize
      }, avatarProps))), _react.default.createElement("div", {
        className: "Entity__main"
      }, title && _react.default.createElement("div", {
        className: "Entity__title"
      }, title), description && _react.default.createElement("div", {
        className: "Entity__description"
      }, description), children && _react.default.createElement("div", {
        className: "Entity__content"
      }, children)));
    }
  }, {
    key: "avatarSize",
    get: function get() {
      switch (this.props.size) {
        case 'm':
          return 64;

        case 's':
          return 48;

        default:
          return this.props.size;
      }
    }
  }]);

  return Entity;
}(_react.Component);

exports.default = Entity;

_defineProperty(Entity, "propTypes", {
  style: _propTypes.default.object,

  /**
   * @deprecated Используйте `avatarProps.size`
   */
  size: _propTypes.default.oneOf(['m', 's', 80, 72, 64, 56, 48, 40, 36, 32, 28]),
  photo: _propTypes.default.string,
  title: _propTypes.default.node,
  description: _propTypes.default.node,
  className: _propTypes.default.string,
  avatarProps: _propTypes.default.shape(_Avatar.default.propTypes),
  children: _propTypes.default.node
});

_defineProperty(Entity, "defaultProps", {
  size: 48,
  photo: '',
  title: '',
  description: ''
});
//# sourceMappingURL=Entity.js.map