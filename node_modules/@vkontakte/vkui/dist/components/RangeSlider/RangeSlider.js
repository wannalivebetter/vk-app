"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _Touch = _interopRequireDefault(require("../Touch/Touch"));

var _getClassName = _interopRequireDefault(require("../../helpers/getClassName"));

var _Slider2 = _interopRequireDefault(require("../Slider/Slider"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classNames = _interopRequireDefault(require("../../lib/classNames"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var baseClassNames = (0, _getClassName.default)('Slider');

var RangeSlider =
/*#__PURE__*/
function (_Slider) {
  _inherits(RangeSlider, _Slider);

  function RangeSlider() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, RangeSlider);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RangeSlider)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onStart", function (e) {
      var absolutePosition = _this.validateAbsolute(e.startX - _this.state.containerLeft);

      var percentPosition = _this.absoluteToPecent(absolutePosition);

      var percentRange = _this.calcPercentRange(percentPosition);

      _this.onChange(_this.percentToValue(percentRange), e);

      if (_this.isControlledOutside) {
        _this.setState({
          startX: absolutePosition
        });
      } else {
        _this.setState(_objectSpread({
          startX: absolutePosition
        }, percentRange));
      }

      var thumb = e.originalEvent.target.closest('.Slider__thumb');

      if (thumb === _this.thumbStart) {
        _this.setState({
          active: 'start'
        });
      } else if (thumb === _this.thumbEnd) {
        _this.setState({
          active: 'end'
        });
      }
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onMoveX", function (e) {
      var absolutePosition = _this.validateAbsolute(_this.state.startX + (e.shiftX || 0));

      var percentPosition = _this.absoluteToPecent(absolutePosition);

      var percentRange = _this.calcPercentRange(percentPosition);

      _this.onChange(_this.percentToValue(percentRange), e);

      if (!_this.isControlledOutside) {
        _this.setState(percentRange);
      }

      e.originalEvent.preventDefault();
    });

    return _this;
  }

  _createClass(RangeSlider, [{
    key: "calcPercentRange",
    value: function calcPercentRange(percent) {
      var _this$state = this.state,
          percentStart = _this$state.percentStart,
          percentEnd = _this$state.percentEnd;

      if (percentStart === 100) {
        return {
          percentStart: percent,
          percentEnd: percentEnd
        };
      } else if (percentEnd === 0) {
        return {
          percentEnd: percent,
          percentStart: percentStart
        };
      } else if (Math.abs(percentStart - percent) <= Math.abs(percentEnd - percent)) {
        return {
          percentStart: percent,
          percentEnd: percentEnd
        };
      } else {
        return {
          percentEnd: percent,
          percentStart: percentStart
        };
      }
    }
  }, {
    key: "validatePercent",
    value: function validatePercent(_ref) {
      var percentStart = _ref.percentStart,
          percentEnd = _ref.percentEnd;
      return {
        percentStart: _get(_getPrototypeOf(RangeSlider.prototype), "validatePercent", this).call(this, percentStart),
        percentEnd: _get(_getPrototypeOf(RangeSlider.prototype), "validatePercent", this).call(this, percentEnd)
      };
    }
  }, {
    key: "percentToValue",
    value: function percentToValue(_ref2) {
      var percentStart = _ref2.percentStart,
          percentEnd = _ref2.percentEnd;
      return [_get(_getPrototypeOf(RangeSlider.prototype), "percentToValue", this).call(this, percentStart), _get(_getPrototypeOf(RangeSlider.prototype), "percentToValue", this).call(this, percentEnd)];
    }
  }, {
    key: "valueToPercent",
    value: function valueToPercent(_ref3) {
      var _ref4 = _slicedToArray(_ref3, 2),
          valueStart = _ref4[0],
          valueEnd = _ref4[1];

      return {
        percentStart: _get(_getPrototypeOf(RangeSlider.prototype), "valueToPercent", this).call(this, valueStart),
        percentEnd: _get(_getPrototypeOf(RangeSlider.prototype), "valueToPercent", this).call(this, valueEnd)
      };
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      window.addEventListener('resize', this.onResize);
      this.onResize(function () {
        _this2.setState(_this2.validatePercent(_this2.valueToPercent(_this2.value)));
      });
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      if (this.isControlledOutside && nextProps.value !== this.props.value) {
        this.setState(this.validatePercent(this.valueToPercent(nextProps.value)));
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var _this$props = this.props,
          className = _this$props.className,
          min = _this$props.min,
          max = _this$props.max,
          step = _this$props.step,
          value = _this$props.value,
          defaultValue = _this$props.defaultValue,
          onChange = _this$props.onChange,
          getRootRef = _this$props.getRootRef,
          restProps = _objectWithoutProperties(_this$props, ["className", "min", "max", "step", "value", "defaultValue", "onChange", "getRootRef"]);

      return _react.default.createElement("div", _extends({}, restProps, {
        className: (0, _classNames.default)(baseClassNames, className),
        ref: this.getRef
      }), _react.default.createElement(_Touch.default, {
        onStart: this.onStart,
        onMoveX: this.onMoveX,
        onEnd: this.onEnd,
        className: "Slider__in"
      }, _react.default.createElement("div", {
        className: "Slider__dragger",
        style: {
          width: this.state.percentEnd - this.state.percentStart + '%',
          left: this.state.percentStart + '%'
        }
      }, _react.default.createElement("span", {
        className: (0, _classNames.default)('Slider__thumb', 'Slider__thumb--start', {
          'Slider__thumb--active': this.state.active === 'start'
        }),
        ref: function ref(el) {
          return _this3.thumbStart = el;
        }
      }), _react.default.createElement("span", {
        className: (0, _classNames.default)('Slider__thumb', 'Slider__thumb--end', {
          'Slider__thumb--active': this.state.active === 'end'
        }),
        ref: function ref(el) {
          return _this3.thumbEnd = el;
        }
      }))));
    }
  }, {
    key: "value",
    get: function get() {
      if (this.isControlledOutside) {
        return this.props.value;
      } else if (this.props.hasOwnProperty('defaultValue')) {
        return this.props.defaultValue;
      } else {
        return [this.props.min, this.props.max];
      }
    }
  }]);

  return RangeSlider;
}(_Slider2.default);

exports.default = RangeSlider;

_defineProperty(RangeSlider, "propTypes", _objectSpread({}, _Slider2.default.propTypes, {
  value: _propTypes.default.arrayOf(_propTypes.default.number),
  defaultValue: _propTypes.default.arrayOf(_propTypes.default.number)
}));

_defineProperty(RangeSlider, "defaultProps", _Slider2.default.defaultProps);
//# sourceMappingURL=RangeSlider.js.map