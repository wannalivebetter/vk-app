"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _FixedLayout = _interopRequireDefault(require("../FixedLayout/FixedLayout"));

var _Tabs = _interopRequireDefault(require("../Tabs/Tabs"));

var _platform = require("../../lib/platform");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * @deprecated Для отрисовки фиксированных табов используйте связку `Tabs` и `FixedLayout`.
 * Этот компонент устарел и будет удален в 3.0.0.
 */
var FixedTabs =
/*#__PURE__*/
function (_React$Component) {
  _inherits(FixedTabs, _React$Component);

  function FixedTabs() {
    _classCallCheck(this, FixedTabs);

    return _possibleConstructorReturn(this, _getPrototypeOf(FixedTabs).apply(this, arguments));
  }

  _createClass(FixedTabs, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          vertical = _this$props.vertical,
          className = _this$props.className,
          style = _this$props.style,
          theme = _this$props.theme,
          children = _this$props.children;
      return _react.default.createElement(_FixedLayout.default, {
        vertical: vertical,
        className: className,
        style: style
      }, _react.default.createElement(_Tabs.default, {
        theme: theme
      }, children));
    }
  }]);

  return FixedTabs;
}(_react.default.Component);

exports.default = FixedTabs;

_defineProperty(FixedTabs, "propTypes", {
  children: _propTypes.default.node.isRequired,
  className: _propTypes.default.string,
  vertical: _propTypes.default.oneOf(['top', 'bottom']),
  style: _propTypes.default.object,

  /**
   * Значения white и gray устарели. Они будут удалены в следующей мажорной версии.
   * Для Android актуален только header
   */
  theme: _propTypes.default.oneOf(['light', 'header']),

  /**
   * iOS only
   */
  type: _propTypes.default.oneOf(['default', 'buttons'])
});

_defineProperty(FixedTabs, "defaultProps", {
  theme: _platform.IS_PLATFORM_IOS ? 'light' : 'header',
  vertical: 'top'
});
//# sourceMappingURL=FixedTabs.js.map