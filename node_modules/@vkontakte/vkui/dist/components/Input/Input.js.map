{"version":3,"sources":["../../../src/components/Input/Input.js"],"names":["Input","alignment","status","getRef","className","getRootRef","restProps","propTypes","type","PropTypes","string","oneOf","value","defaultValue","onChange","func","placeholder","oneOfType","shape","current","instanceOf","Element","defaultProps"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAG,SAARA,KAAQ,OAAwE;AAAA,MAArEC,SAAqE,QAArEA,SAAqE;AAAA,MAA1DC,MAA0D,QAA1DA,MAA0D;AAAA,MAAlDC,MAAkD,QAAlDA,MAAkD;AAAA,MAA1CC,SAA0C,QAA1CA,SAA0C;AAAA,MAA/BC,UAA+B,QAA/BA,UAA+B;AAAA,MAAhBC,SAAgB;;AACpF,SACE,6BAAC,kBAAD;AACE,IAAA,SAAS,EAAE,0BAAW,OAAX,EAAoBF,SAApB,uCACEH,SADF,GACgBA,SADhB,EADb;AAIE,IAAA,MAAM,EAAEC,MAJV;AAKE,IAAA,UAAU,EAAEG;AALd,KAOE,mDAAWC,SAAX;AAAsB,IAAA,SAAS,EAAC,WAAhC;AAA4C,IAAA,GAAG,EAAEH;AAAjD,KAPF,CADF;AAWD,CAZD;;AAcAH,KAAK,CAACO,SAAN,GAAkB;AAChBC,EAAAA,IAAI,EAAEC,mBAAUC,MADA;AAEhBT,EAAAA,SAAS,EAAEQ,mBAAUE,KAAV,CAAgB,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,CAAhB,CAFK;AAGhBC,EAAAA,KAAK,EAAEH,mBAAUC,MAHD;AAIhBG,EAAAA,YAAY,EAAEJ,mBAAUC,MAJR;AAKhBI,EAAAA,QAAQ,EAAEL,mBAAUM,IALJ;AAMhBC,EAAAA,WAAW,EAAEP,mBAAUC,MANP;;AAQhB;;;AAGAR,EAAAA,MAAM,EAAEO,mBAAUE,KAAV,CAAgB,CAAC,SAAD,EAAY,OAAZ,EAAqB,UAArB,EAAiC,OAAjC,CAAhB,CAXQ;AAYhBR,EAAAA,MAAM,EAAEM,mBAAUQ,SAAV,CAAoB,CAC1BR,mBAAUM,IADgB,EAE1BN,mBAAUS,KAAV,CAAgB;AAAEC,IAAAA,OAAO,EAAEV,mBAAUW,UAAV,CAAqBC,OAArB;AAAX,GAAhB,CAF0B,CAApB,CAZQ;AAgBhBhB,EAAAA,UAAU,EAAEI,mBAAUQ,SAAV,CAAoB,CAC9BR,mBAAUM,IADoB,EAE9BN,mBAAUS,KAAV,CAAgB;AAAEC,IAAAA,OAAO,EAAEV,mBAAUW,UAAV,CAAqBC,OAArB;AAAX,GAAhB,CAF8B,CAApB,CAhBI;AAoBhBjB,EAAAA,SAAS,EAAEK,mBAAUC;AApBL,CAAlB;AAuBAV,KAAK,CAACsB,YAAN,GAAqB;AACnBd,EAAAA,IAAI,EAAE;AADa,CAArB;eAIeR,K","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../lib/classNames';\nimport FormField from '../FormField/FormField';\n\nconst Input = ({ alignment, status, getRef, className, getRootRef, ...restProps }) => {\n  return (\n    <FormField\n      className={classNames('Input', className, {\n        [`Input--${alignment}`]: alignment\n      })}\n      status={status}\n      getRootRef={getRootRef}\n    >\n      <input {...restProps} className=\"Input__el\" ref={getRef} />\n    </FormField>\n  );\n};\n\nInput.propTypes = {\n  type: PropTypes.string,\n  alignment: PropTypes.oneOf(['left', 'center', 'right']),\n  value: PropTypes.string,\n  defaultValue: PropTypes.string,\n  onChange: PropTypes.func,\n  placeholder: PropTypes.string,\n\n  /**\n   * Значение `verified` устарело и будет удалено в 3.0.0. Используйте вместо него `valid`\n   */\n  status: PropTypes.oneOf(['default', 'error', 'verified', 'valid']),\n  getRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) })\n  ]),\n  getRootRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(Element) })\n  ]),\n  className: PropTypes.string\n};\n\nInput.defaultProps = {\n  type: 'text'\n};\n\nexport default Input;\n"],"file":"Input.js"}