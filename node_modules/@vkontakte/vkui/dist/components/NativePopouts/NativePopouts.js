"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _removeObjectKeys = _interopRequireDefault(require("../../lib/removeObjectKeys"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Alert = _interopRequireDefault(require("../Alert/Alert"));

var _ActionSheet = _interopRequireDefault(require("../ActionSheet/ActionSheet"));

var _ActionSheetItem = _interopRequireDefault(require("../ActionSheetItem/ActionSheetItem"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function brToNl() {
  var str = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  var regex = /<br\s*\/?>/gi;
  return str.replace(regex, '\n');
}

var actionId = 1;
/**
 * @deprecated будет удален в 3.0.0
 */

var NativePopouts =
/*#__PURE__*/
function (_React$Component) {
  _inherits(NativePopouts, _React$Component);

  function NativePopouts() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, NativePopouts);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NativePopouts)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "state", {
      popout: null
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "actions", []);

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "actionsStore", {});

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "vkuiListener", function (e) {
      if (e.type === 'VKWebAppEvent' && e.detail && e.detail.action) {
        if (_this.actionsStore.hasOwnProperty(e.detail.action)) {
          _this.actionsStore[e.detail.action](e.detail);

          _this.props.popout && _this.props.popout.onClose && _this.props.popout.onClose();
        }
      }
    });

    return _this;
  }

  _createClass(NativePopouts, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.props.vkuiConnect.subscribe(this.vkuiListener);

      if (this.props.popout) {
        this.renderPopout(this.props);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.props.vkuiConnect.unsubscribe(this.vkuiListener);
    }
  }, {
    key: "renderNativeAlert",
    value: function renderNativeAlert(popout) {
      var style = popout.style,
          title = popout.title,
          message = popout.text;
      this.props.vkuiConnect.send('VKWebAppAlert', {
        style: style,
        title: brToNl(title),
        message: brToNl(message),
        actions: this.actions.map(function (item) {
          return (0, _removeObjectKeys.default)(item, ['action']);
        })
      });
    }
  }, {
    key: "renderUIAlert",
    value: function renderUIAlert(popout) {
      var title = popout.title,
          text = popout.text,
          onClose = popout.onClose,
          actionsLayout = popout.actionsLayout;
      this.setState({
        popout: _react.default.createElement(_Alert.default, {
          actions: this.actions.map(function (item) {
            return (0, _removeObjectKeys.default)(item, ['params']);
          }),
          onClose: onClose,
          actionsLayout: actionsLayout
        }, title && _react.default.createElement("h2", null, title), text && _react.default.createElement("p", null, text))
      });
    }
  }, {
    key: "renderNativeSheet",
    value: function renderNativeSheet(popout) {
      var style = popout.style;
      this.props.vkuiConnect.send('VKWebAppAlert', {
        style: style,
        actions: this.actions.map(function (item) {
          return (0, _removeObjectKeys.default)(item, ['action']);
        })
      });
    }
  }, {
    key: "renderUISheet",
    value: function renderUISheet(popout) {
      var title = popout.title,
          text = popout.text,
          onClose = popout.onClose;
      this.setState({
        popout: _react.default.createElement(_ActionSheet.default, {
          title: title,
          text: text,
          onClose: onClose
        }, this.actions.map(function (item, index) {
          return _react.default.createElement(_ActionSheetItem.default, {
            autoclose: item.autoclose,
            theme: item.style,
            onClick: item.action,
            key: "".concat(index)
          }, item.title);
        }))
      });
    }
  }, {
    key: "closeUIPopout",
    value: function closeUIPopout() {
      this.setState({
        popout: null
      });
    }
  }, {
    key: "renderPopout",
    value: function renderPopout(props) {
      if (props.popout.style) {
        this.actions = props.popout.actions.map(function (item) {
          return _objectSpread({}, item, {
            autoclose: item.hasOwnProperty('autoclose') ? item.autoclose : true,
            action: item.action || props.popout.onClose,
            handler: _objectSpread({}, item.params, {
              action: "action-".concat(actionId++)
            })
          });
        });
        this.actionsStore = this.actions.reduce(function (res, item) {
          res[item.handler.action] = item.action;
          return res;
        }, {});

        switch (props.popout.style) {
          case 'alert':
            this.context.isWebView ? this.renderNativeAlert(props.popout) : this.renderUIAlert(props.popout);
            break;

          case 'actionSheet':
            this.context.isWebView ? this.renderNativeSheet(props.popout) : this.renderUISheet(props.popout);
            break;
        }
      } else {
        this.setState({
          popout: props.popout
        });
      }
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      if (!nextProps.popout && this.props.popout) {
        this.closeUIPopout();
      }

      if (nextProps.popout && nextProps.popout !== this.props.popout) {
        this.context.isWebView && this.closeUIPopout();
        this.renderPopout(nextProps);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var Component = this.props.component;
      return _react.default.createElement(Component, _extends({}, (0, _removeObjectKeys.default)(this.props, ['popout']), {
        popout: this.state.popout
      }));
    }
  }]);

  return NativePopouts;
}(_react.default.Component);

exports.default = NativePopouts;

_defineProperty(NativePopouts, "propTypes", {
  popout: _propTypes.default.oneOfType([_propTypes.default.shape({
    style: _propTypes.default.oneOf(['alert', 'actionSheet']).isRequired,
    title: _propTypes.default.string,
    text: _propTypes.default.string,
    onClose: _propTypes.default.func.isRequired,
    actions: _propTypes.default.arrayOf(_propTypes.default.shape({
      style: _propTypes.default.oneOf(['cancel', 'default', 'destructive']),
      title: _propTypes.default.string,
      action: _propTypes.default.func
    }))
  }), _propTypes.default.element]),
  vkuiConnect: _propTypes.default.object.isRequired,

  /**
   * Root or View
   */
  component: _propTypes.default.func.isRequired
});

_defineProperty(NativePopouts, "contextTypes", {
  isWebView: _propTypes.default.bool
});
//# sourceMappingURL=NativePopouts.js.map